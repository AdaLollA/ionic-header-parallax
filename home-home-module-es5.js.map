{"version":3,"sources":["./dist/ionic-header-parallax/fesm5/ionic-header-parallax.js","./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAkF;;AAElF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,yBAAyB,OAAO,mDAAK,EAAE;AACvC;AACA;AACA,CAAC;AACD,WAAW,EAmDV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8D;AAC9D;;;;;;;;;;;;ACxVA,y7BAAy7B,+NAA+N,cAAc,oFAAoF,yFAAyF,oCAAoC,gDAAgD,yhBAAyhB,oBAAoB,MAAM,IAAI,oHAAoH,aAAa,6BAA6B,mBAAmB,gMAAgM,kdAAkd,0CAA0C,sIAAsI,0CAA0C,8CAA8C,iEAAiE,+CAA+C,wCAAwC,iDAAiD,sCAAsC,gDAAgD,wCAAwC,gDAAgD,2DAA2D,iDAAiD,+vC;;;;;;;;;;;;;;;;;;;;;;;ACAn+G;AACM;AACF;AACA;AACE;AAER;AAC2B;AAiBlE;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAf1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;gBACF,+EAAyB;aAC1B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACxB3B,qBAAqB,iCAAiC,GAAG,6CAA6C,uf;;;;;;;;;;;;;;;;;ACA5D;AAO1C;IAEE;IAAe,CAAC;IAFL,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oIAA6B;;SAE9B,CAAC;;OACW,QAAQ,CAIpB;IAAD,eAAC;CAAA;AAJoB","file":"home-home-module-es5.js","sourcesContent":["import { Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ParallaxDirective = /** @class */ (function () {\r\n    function ParallaxDirective(headerRef, renderer) {\r\n        this.headerRef = headerRef;\r\n        this.renderer = renderer;\r\n        this.maximumHeight = 300;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxDirective.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.initElements();\r\n            _this.initStyles();\r\n            _this.initEvents();\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxDirective.prototype.initElements = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var parentElement = this.headerRef.nativeElement.parentElement;\r\n        this.header = this.headerRef.nativeElement;\r\n        this.toolbar = this.header.querySelector('ion-toolbar');\r\n        if (!this.toolbar) {\r\n            throw new Error('Parallax directive requires a toolbar or navbar element on the page to work.');\r\n        }\r\n        this.ionTitle = this.toolbar.querySelector('ion-title');\r\n        this.toolbarBackground = this.toolbar.shadowRoot.querySelector('.toolbar-background');\r\n        this.barButtons = this.headerRef.nativeElement.querySelector('ion-buttons');\r\n        /** @type {?} */\r\n        var ionContent = parentElement.querySelector('ion-content');\r\n        this.scrollContent = ionContent.shadowRoot.querySelector('.inner-scroll');\r\n        if (!this.scrollContent) {\r\n            throw new Error('Parallax directive requires an <ion-content> element on the page to work.');\r\n        }\r\n        // Create image overlay\r\n        this.imageOverlay = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.imageOverlay, 'image-overlay');\r\n        this.colorOverlay = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.colorOverlay, 'color-overlay');\r\n        this.colorOverlay.appendChild(this.imageOverlay);\r\n        this.header.appendChild(this.colorOverlay);\r\n        // Copy title and buttons\r\n        this.overlayTitle = this.ionTitle && (/** @type {?} */ (this.ionTitle.cloneNode(true)));\r\n        if (this.overlayTitle) {\r\n            this.renderer.addClass(this.overlayTitle, 'parallax-title');\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                /** @type {?} */\r\n                var toolbarTitle = _this.overlayTitle.shadowRoot.querySelector('.toolbar-title');\r\n                _this.renderer.setStyle(toolbarTitle, 'pointer-events', 'unset');\r\n            }));\r\n        }\r\n        if (this.overlayTitle) {\r\n            this.imageOverlay.appendChild(this.overlayTitle);\r\n        }\r\n        if (this.barButtons) {\r\n            this.imageOverlay.appendChild(this.barButtons);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxDirective.prototype.initStyles = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.headerHeight = this.scrollContent.clientHeight;\r\n        this.ticking = false;\r\n        if (!this.scrollContent || !toolbar) {\r\n            return;\r\n        }\r\n        // fetch styles\r\n        this.maximumHeight = parseFloat(this.maximumHeight.toString());\r\n        this.headerMinHeight = this.toolbar.offsetHeight;\r\n        this.scrollContentPaddingTop = window.getComputedStyle(this.scrollContent, null).paddingTop.replace('px', '');\r\n        this.scrollContentPaddingTop = parseFloat(this.scrollContentPaddingTop);\r\n        this.originalToolbarBgColor = window.getComputedStyle(this.toolbarBackground, null).backgroundColor;\r\n        // header and title\r\n        this.renderer.setStyle(this.header, 'position', 'relative');\r\n        if (this.overlayTitle) {\r\n            this.renderer.setStyle(this.overlayTitle, 'color', this.titleColor);\r\n            this.renderer.setStyle(this.overlayTitle, 'position', 'absolute');\r\n            this.renderer.setStyle(this.overlayTitle, 'width', '100%');\r\n            this.renderer.setStyle(this.overlayTitle, 'height', '100%');\r\n            this.renderer.setStyle(this.overlayTitle, 'text-align', 'center');\r\n        }\r\n        // color overlay\r\n        this.renderer.setStyle(this.colorOverlay, 'background-color', this.originalToolbarBgColor);\r\n        this.renderer.setStyle(this.colorOverlay, 'height', this.maximumHeight + \"px\");\r\n        this.renderer.setStyle(this.colorOverlay, 'position', 'absolute');\r\n        this.renderer.setStyle(this.colorOverlay, 'top', -this.headerMinHeight * 0 + \"px\");\r\n        this.renderer.setStyle(this.colorOverlay, 'left', '0');\r\n        this.renderer.setStyle(this.colorOverlay, 'width', '100%');\r\n        this.renderer.setStyle(this.colorOverlay, 'z-index', '10');\r\n        this.renderer.setStyle(this.colorOverlay, 'pointer-events', 'none');\r\n        // image overlay\r\n        this.renderer.setStyle(this.imageOverlay, 'background-color', this.expandedColor);\r\n        this.renderer.setStyle(this.imageOverlay, 'background-image', \"url(\" + (this.imageUrl || '') + \")\");\r\n        this.renderer.setStyle(this.imageOverlay, 'height', \"100%\");\r\n        this.renderer.setStyle(this.imageOverlay, 'width', '100%');\r\n        this.renderer.setStyle(this.imageOverlay, 'pointer-events', 'none');\r\n        this.renderer.setStyle(this.imageOverlay, 'background-size', 'cover');\r\n        this.renderer.setStyle(this.imageOverlay, 'background-position', 'center');\r\n        // .toolbar-background\r\n        this.renderer.setStyle(this.toolbarBackground, 'background-color', this.originalToolbarBgColor);\r\n        // .bar-buttons\r\n        if (this.barButtons) {\r\n            this.renderer.setStyle(this.barButtons, 'pointer-events', 'all');\r\n            Array.from(this.barButtons.children).forEach((/**\r\n             * @param {?} btn\r\n             * @return {?}\r\n             */\r\n            function (btn) {\r\n                _this.renderer.setStyle(btn, 'color', _this.titleColor);\r\n            }));\r\n        }\r\n        // .scroll-content\r\n        if (this.scrollContent) {\r\n            this.renderer.setAttribute(this.scrollContent, 'parallax', '');\r\n            this.renderer.setStyle(this.scrollContent, 'padding-top', this.maximumHeight + this.scrollContentPaddingTop - this.headerMinHeight + \"px\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxDirective.prototype.initEvents = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        window.addEventListener('resize', (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.headerHeight = _this.scrollContent.clientHeight;\r\n        }), false);\r\n        if (this.scrollContent) {\r\n            this.scrollContent.addEventListener('scroll', (/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            function (e) {\r\n                if (!_this.ticking) {\r\n                    window.requestAnimationFrame((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        _this.updateElasticHeader();\r\n                    }));\r\n                }\r\n                _this.ticking = true;\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxDirective.prototype.updateElasticHeader = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.scrollContent || !toolbar) {\r\n            return;\r\n        }\r\n        this.scrollTop = this.scrollContent.scrollTop;\r\n        if (this.scrollTop >= 0) {\r\n            this.translateAmt = this.scrollTop / 2;\r\n            this.scaleAmt = 1;\r\n        }\r\n        else {\r\n            this.translateAmt = 0;\r\n            this.scaleAmt = -this.scrollTop / this.headerHeight + 1;\r\n        }\r\n        // Parallax total progress\r\n        this.headerMinHeight = this.toolbar.offsetHeight;\r\n        /** @type {?} */\r\n        var progress = (this.maximumHeight - this.scrollTop - this.headerMinHeight) / (this.maximumHeight - this.headerMinHeight);\r\n        progress = Math.max(progress, 0);\r\n        // ion-header: set height\r\n        /** @type {?} */\r\n        var targetHeight = this.maximumHeight - this.scrollTop;\r\n        targetHeight = Math.max(targetHeight, this.headerMinHeight);\r\n        // .toolbar-background: change color\r\n        this.renderer.setStyle(this.imageOverlay, 'height', targetHeight + \"px\");\r\n        this.renderer.setStyle(this.imageOverlay, 'opacity', \"\" + progress);\r\n        this.renderer.setStyle(this.colorOverlay, 'height', targetHeight + \"px\");\r\n        this.renderer.setStyle(this.colorOverlay, 'opacity', targetHeight > this.headerMinHeight ? '1' : '0');\r\n        this.renderer.setStyle(this.toolbarBackground, 'background-color', targetHeight > this.headerMinHeight ? 'transparent' : this.originalToolbarBgColor);\r\n        // .bar-buttons\r\n        if (this.barButtons) {\r\n            if (targetHeight > this.headerMinHeight) {\r\n                this.imageOverlay.append(this.barButtons);\r\n                Array.from(this.barButtons.children).forEach((/**\r\n                 * @param {?} btn\r\n                 * @return {?}\r\n                 */\r\n                function (btn) {\r\n                    _this.renderer.setStyle(btn, 'color', _this.titleColor);\r\n                }));\r\n            }\r\n            else {\r\n                this.toolbar.append(this.barButtons);\r\n                Array.from(this.barButtons.children).forEach((/**\r\n                 * @param {?} btn\r\n                 * @return {?}\r\n                 */\r\n                function (btn) {\r\n                    _this.renderer.setStyle(btn, 'color', 'unset');\r\n                }));\r\n            }\r\n        }\r\n        this.ticking = false;\r\n    };\r\n    ParallaxDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'ion-header[parallax]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ParallaxDirective.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: Renderer2 }\r\n    ]; };\r\n    ParallaxDirective.propDecorators = {\r\n        imageUrl: [{ type: Input }],\r\n        expandedColor: [{ type: Input }],\r\n        titleColor: [{ type: Input }],\r\n        maximumHeight: [{ type: Input }]\r\n    };\r\n    return ParallaxDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.imageUrl;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.expandedColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.titleColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.maximumHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.header;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.toolbar;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.toolbarBackground;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.imageOverlay;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.colorOverlay;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.barButtons;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollContent;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerMinHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.translateAmt;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scaleAmt;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.lastScrollTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.ticking;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.originalToolbarBgColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.overlayTitle;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.ionTitle;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.overlayButtons;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollContentPaddingTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerRef;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar IonicHeaderParallaxModule = /** @class */ (function () {\r\n    function IonicHeaderParallaxModule() {\r\n    }\r\n    IonicHeaderParallaxModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        ParallaxDirective\r\n                    ],\r\n                    imports: [],\r\n                    exports: [\r\n                        ParallaxDirective\r\n                    ]\r\n                },] }\r\n    ];\r\n    return IonicHeaderParallaxModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { IonicHeaderParallaxModule, ParallaxDirective as ɵa };\n//# sourceMappingURL=ionic-header-parallax.js.map\n","module.exports = \"<ion-header parallax imageUrl=\\\"https://picsum.photos/1080\\\" maximumHeight=\\\"350\\\" expandedColor=\\\"#AAA\\\" titleColor=\\\"#313131\\\">\\n\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Parallax Header\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <p>This directive enables parallax effect on <code>ion-header</code> elements to display a cover photo while on top of\\n    the page and transition it to the normal navbar when content is scrolled down.</p>\\n  <h2 id=\\\"set-up\\\">Set Up</h2>\\n  <ol>\\n    <li>Install package: <code>$ npm i ionic-header-parallax</code>.</li>\\n    <li>Import the directive into your desired module (usually <code>app.module.ts</code>):</li>\\n  </ol>\\n  <pre class=\\\"hljs\\\"><code><div><span class=\\\"hljs-keyword\\\">import</span>  IonicHeaderParallaxModule  <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'ionic-header-parallax'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@NgModule</span>(\\n  imports: [\\n    IonicHeaderParallaxModule,\\n    ...\\n</div></code></pre>\\n  <h2 id=\\\"usage\\\">Usage</h2>\\n  <p>Just add the attribute <code>parallax</code> to any <code>&lt;ion-header&gt;</code> element:</p>\\n  <pre class=\\\"hljs\\\"><code><div><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ion-header</span> <span class=\\\"hljs-attr\\\">parallax</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ion-header</span>&gt;</span>\\n</div></code></pre>\\n  <p>Optional attributes:</p>\\n  <ul>\\n    <li><code>imageUrl (string)</code>: The background image to show while expanded.</li>\\n    <li><code>maximumHeight (number)</code>: The height for the header when expanded. Default is <code>200</code>.</li>\\n    <li><code>expandedColor (string)</code>: The color (web hex formatted) to show while the header is expanded when no\\n      <code>imageUrl</code> is set. When scrolled it will fade to the navbar/toolbar's color or the one configured in\\n      <code>&lt;toolbar color=&quot;&quot;&gt;</code> attribute.</li>\\n    <li><code>titleColor (string)</code>: The text color (web hex formatted) for <code>&lt;ion-title&gt;</code> and\\n      <code>&lt;ion-back-button&gt;</code> elements when expanded. They will turn to their default color on cover\\n      collapse.</li>\\n  </ul>\\n  <p>Example:</p>\\n  <pre class=\\\"hljs\\\"><code><div><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ion-header</span> <span class=\\\"hljs-attr\\\">parallax</span> <span class=\\\"hljs-attr\\\">imageUrl</span>=<span class=\\\"hljs-string\\\">\\\"https://picsum.photos/350\\\"</span> <span class=\\\"hljs-attr\\\">maximumHeight</span>=<span class=\\\"hljs-string\\\">\\\"350\\\"</span> <span class=\\\"hljs-attr\\\">expandedColor</span>=<span class=\\\"hljs-string\\\">\\\"#AAA\\\"</span> <span class=\\\"hljs-attr\\\">titleColor</span>=<span class=\\\"hljs-string\\\">\\\"black\\\"</span>&gt;</span>\\n\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ion-toolbar</span> <span class=\\\"hljs-attr\\\">color</span>=<span class=\\\"hljs-string\\\">\\\"primary\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ion-title</span>&gt;</span>\\n      Parallax Header\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ion-title</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ion-toolbar</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ion-header</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ion-content</span>&gt;</span>\\n\\tSome content here\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ion-content</span>&gt;</span>\\n</div></code></pre>\\n  <h2 id=\\\"modifying-the-source-code\\\">Modifying the Source Code</h2>\\n  <p>In case you need to make your own modifications, the package is pretty simple, just 1 .ts file. You can clone the\\n    repo wherever in your ionic project (usually inside the <code>directives</code> folder):\\n    <code>$ git clone https://github.com/RaschidJFR/ionic-header-parallax.git</code>. Then edit the file\\n    <code>src/lib/parallax.directive.ts</code>.</p>\\n  <h2 id=\\\"contributing\\\">Contributing</h2>\\n  <p>I don't plan to be full-time maintaining this package, but as I'm usually developing in Ionic I'll be glad to\\n    update it any time I make some upgrades for myself.\\n    Contributions are very welcome. The source files can be found in the <a\\n      href=\\\"https://github.com/RaschidGithub/ionic-header-parallax\\\">repo</a>.</p>\\n  <h2 id=\\\"credits\\\">Credits</h2>\\n  <p>Raschid JF. Rafaelly</p>\\n  <p><a href=\\\"mailto:me@raschidjfr.dev\\\">me@raschidjfr.dev</a></p>\\n  <p><a href=\\\"https://raschidjfr.dev\\\">https://raschidjfr.dev</a></p>\\n  <p>This is an implementation of this awesome tutorial on v2 by <a\\n      href=\\\"https://www.joshmorony.com/how-to-create-a-directive-in-ionic-2-parallax-header/\\\">Josh Morony</a>. Thanks.\\n  </p>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\nimport { IonicHeaderParallaxModule } from 'ionic-header-parallax';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ]),\n    IonicHeaderParallaxModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"* {\\n  --ion-color-primary: #5f468c;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcVXNlcnNcXFJhc2NoaWRcXEdpdFxcQ29yZG92YVxcaW9uaWMtdG9vbGJveFxcZGlyZWN0aXZlc1xcaW9uaWMtaGVhZGVyLXBhcmFsbGF4L3NyY1xcYXBwXFxob21lXFxob21lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDRCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gIC0taW9uLWNvbG9yLXByaW1hcnk6ICM1ZjQ2OGM7XG59IiwiKiB7XG4gIC0taW9uLWNvbG9yLXByaW1hcnk6ICM1ZjQ2OGM7XG59Il19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  constructor() {}\n\n}\n"],"sourceRoot":""}